@startuml
actor "Big Company A"
actor "Small Company B"
collections  "=Decentralised VM\n(DVM) forks with:\n Ubuntu+MongoDB\n----\n DVM smart contract"  as DVM #99FF99
participant "=Zero-day Exploit\n written by WhiteHat Hacker\n----\nDecentralised Encrypted Locker\n (DEL)" as DEL #97c0fe
participant "=Exploit smart contract" as exploit #ffcccb
actor "WhiteHat Hacker" #white

autonumber
"Big Company A"->"DVM": Deposit into DVM smart contract:\n -$5000\n -public key\n -10 days responsible disclosure time
"Big Company A"->"DVM": Deposit into DVM smart contract:\n -$200\n -public key\n -15 days responsible disclosure time

"WhiteHat Hacker"->"DVM": WhiteHat Hacker scans blockchain\n for DVM smart contracts with bounty.
"DVM"->"WhiteHat Hacker": WhiteHat Hacker reads $5200 bounty\n for exploit on Ubuntu and/or MongoDB.
"WhiteHat Hacker"<-"WhiteHat Hacker": WhiteHat Hacker writes\n zero-day exploit.
"WhiteHat Hacker"->"DEL": Deposit into DEL:\n -exploit\n -public key company A\n -public key company B
"WhiteHat Hacker"->"DVM": "WhiteHat Hacker refers decentralised VM contract\n to decentralised locker that contains the exploit.
"WhiteHat Hacker"->"exploit": Create smart contract, deposit:\n -evaluation gas costs\n -reference to DVM Smart Contract.
"exploit"->"DVM": Reach out to DVM smart contract, ask for evaluation.
"DVM"->"exploit": Read max responsible disclosure time.
"exploit"<-"exploit": Wait for max responsible disclosure time.


"DVM"->"DEL": Verify exploit is locked to public.
"DVM"->"DEL": Verify exploit is accessible with private key A.
"DVM"->"DEL": Verify exploit is accessible with private key B.


"DVM"->"Big Company A": Notice attack.
"DVM"->"Small Company B": Notice attack.
"DVM"->"Big Company A": Get exploit using private key A.
"DVM"->"Small Company B": Get exploit using private key B.
"Big Company A"->"Big Company A": Patch their systems against exploit.
"Small Company B"->"Small Company B": Patch their systems against exploit.

"exploit"->"DEL": Exploit smart contract\n opens DEL publically.
"DEL"->"DVM": DVM gets public exploit from DEL.
"DVM"->"DVM": DVM evaluates exploit.
"DVM"->"DVM": Exploit changes secret in DVM (forks).
"DVM"->"DVM": DVM smart contract reads DVM secret.
"DVM"->"exploit": If secret is compromised,\n DVM smart contract pays\n exploit smart contract.
@enduml